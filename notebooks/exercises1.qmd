---
title: "Part 1: Working with DataLad Datasets"
format: html
---

## Consuming Existing Datasets

In this section, you are going to clone an existing DataLad dataset and download its contents.
While the `datalad` API is universal, the commands for navigating the data set differ between operating systems (see table below).

| Linux/macOS | Windows | Description |
| --- | --- | --- |
| `ls -a` | `dir /a` | List the content of the current directory (including hidden files) |
| `ls -a data` | `dir /a data` | List the content of the `data` directory |
| `du -sh` | `dir /s` | Get the disk usage of the current directory |
| `du -sh data` | `dir /s data` | Get the disk usage of the `data` directory |
| `cd data` | `cd data` | Change the directory to `data`|
: Terminal commands

| Command | Description |
| --- | --- | 
| `datalad clone https://example.com` | Clone the data set from `example.com` |
| `datalad get folder/` | Get the file content of the `folder/` |
| `datalad get folder/image.png` | Get the file content of the file `image.png` |
| `datalad drop folder/` | Drop the file content of the `folder/` |
: DataLad commands

:::{#exr-}

Clone the dataset from https://gin.g-node.org/obi/penguins
:::
::: {.callout-tip collapse="true"}
## Solution
```bash
datalad clone https://gin.g-node.org/obi/penguins
```
:::

:::{#exr-}
Change the directory to `penguins` and list the directory's content
:::
::: {.callout-tip collapse="true"}
## Solution
On Linux/macOS:
```bash
cd penguins
ls -a
```
On Windows:
```powershell
cd penguins
dir /a
```
:::

:::{#exr-}
Check the disk usage of the `penguins` directory
:::
::: {.callout-tip collapse="true"}
## Solution
On Linux/macOS:
```bash
du -sh
```
On Windows:
```powershell
dir /s
```
:::

:::{#exr-}
Get the content of the `examples` subdirectory
:::
::: {.callout-tip collapse="true"}
## Solution
```bash
datalad get examples
```
:::

:::{#exr-}
Check the disk usage of the `penguins` directory again
:::
::: {.callout-tip collapse="true"}
## Solution
On Linux/macOS:
```bash
du -sh
```
On Windows:
```powershell
dir /s
```
:::

:::{#exr-}
Drop the content of `examples/chinstrap.jpg` and check the disk usage again
:::
::: {.callout-tip collapse="true"}
## Solution
```bash
datalad drop examples/chinstrap.jpg
```
On Linux/macOS:
```bash
du -sh
```
On Windows:
```powershell
dir /s
```
:::

## Checking File Identity and Location with git-annex

Since DataLad is built on top of `git-annex`, you can use its commands on any DataLad dataset.
In this section, you'll use `git-annex` to get information on the dataset and localize its file contents.

| Command | Description |
| --- | --- | 
| `git annex info` | Show the git-annex information for the whole dataset |
| `git annex info folder/image.png` | Show the git-annex information for the file `image.png`|
| `git annex whereis folder/image.png` | List the repositories that have the file content for `image.png` |


:::{#exr-}
Display the `git annex info` for the file `examples/gentoo.jpg`. What is the *size* of that file? Is it *present* on your machine?
:::
::: {.callout-tip collapse="true"}
## Solution
```bash
git annex info examples/gentoo.jpg
```
The file is 4.81 megabtyes and it should be present since we previously loaded the content of the `examples` folder.
:::

:::{#exr-}
Display the `git-annex info` of the whole data set. How many annexed files are there in the working tree?
:::
::: {.callout-tip collapse="true"}
## Solution
```bash
git annex info
```
The number of annexed files is displayed in this line:
`annexed files in working tree: 21`
:::

:::{#exr-}
Use `git annex whereis` to list the repositories that have the file content for the image `examples/gentoo.jpg`.
:::
::: {.callout-tip collapse="true"}
## Solution
```bash
git annex whereis examples/gentoo.jpg
```
:::

:::{#exr-}
Use `git annex whereis` to list the repositories that have the file content for the table `data/table_220.csv`. How does this differ from the list of repositories that contain the content for `gentoo.jpg`?
:::
::: {.callout-tip collapse="true"}
## Solution
```bash
git annex whereis data/table_220.csv
```
The table is not stored in the local repository, listed in the line marked `[here]`.
:::

