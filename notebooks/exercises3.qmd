---
name: "Distributing and Sharing Datasets"
format: html
jupyter: bash
---

## Distributing your DataSet

Maybe skip the local remote, just do github and mention that datalad supports many remotes via extensions (e.g. OSF)

| Code | Description |
| --- | --- |
| `datalad siblings` | List all siblings of the current dataset |
| `datalad create-sibling-github myrepo` | Create a new GitHub repo called `myrepo` and register it as a sibling |
| `datalad push --to github` | Push the dataset `--to` the sibling `github` |

:::{#exr-}
List all `siblings` of the penguins dataset
:::
::: {.callout-tip}
# Solution
```{bash}
#| eval: false
datalad siblings
```
:::

:::{#exr-}
Create a new sibling on GitHub. You'll need an access token --- on GitHub, go to Settings > Developer Settings > Personal access tokens and select Generate new token (classic) to create a token with access to your repositories.
:::
::: {.callout-tip}
# Solution
Either run `create-sibling-github` and paste the token when being prompted
```{bash}
#| eval: false
datalad create-sibling-github penguins
```
Or use the `--credential` flag to pass the token
```{bash}
#| eval: false
datalad create-sibling-github penguins --credential <token>
```
:::

:::{#exr-}
Push the data to the github remote
:::
::: {.callout-tip}
# Solution
```{bash}
#| eval: false
datalad push --to github
```
:::

:::{#exr-}
Clone the dataset from the GitHub sibling to a new location
:::
::: {.callout-tip}
# Solution
```{bash}
#| eval: false
datalad clone https://github.com/OleBialas/penguins.git ~/
```
:::

## Creating a Special Remote for File Content


:::{#exr-}
Get the file content for the whole penguins dataset
:::
::: {.callout-tip}
# Solution
```{bash}
#| eval: false
datalad get *
```
:::


:::{#exr-}
Create a special remote at a `directory` outside `penguins/`. Then, list all `siblings` to confirm the remove was created.
:::
::: {.callout-tip}
# Solution
```{bash}
#| eval: false
mkdir ~/usbdrive
git annex initremote usbdrive type=directory directory=~/usbdrive encryption=none autoenable=true
datalad siblings
```
:::

:::{#exr-}
Push the data to the local remote
:::
::: {.callout-tip}
# Solution
```{bash}
#| eval: false
datalad push --to usbdrive
```
:::

:::{#exr-}
`configure` the github sibling so that the publish depends on the local remote
:::
::: {.callout-tip}
# Solution
```{bash}
#| eval: false
datalad siblings configure -s github --publish-depends usbdrive
```
:::
